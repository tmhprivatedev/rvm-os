# RVM OS Документация

## Обзор
RVM OS - это операционная система с 12-битной виртуальной машиной и графическими интерфейсами в консоли. Включает собственный набор команд, управление памятью и две графические системы.

## Архитектура
- 12-битный процессор
- 1 МБ памяти
- 16 регистров (12 основных + 4 системных)
- Memory-mapped I/O

## Набор команд

### Основные инструкции
START    = 0xF77   - Начать выполнение
STOP     = 0x770   - Остановить выполнение
PUT      = 0xC     - Копировать регистр в регистр
PUTD     = 0x9     - Загрузить непосредственное значение
ADD      = 0x1     - Сложить регистры
SUB      = 0x6     - Вычесть регистры
MULT     = 0xA     - Умножить регистры
GET      = 0x8     - Вывести значение регистра
JZ       = 0x3     - Переход если ноль
JNZ      = 0xD     - Переход если не ноль

### Расширенные инструкции (префикс DELAY 0x7)
JMP      = 0x4     - Переход по адресу
GETADDR  = 0x2     - Получить адрес памяти
INP      = 0xD     - Ввод символа
EXT      = 0x6     - Внешний вызов
CLEARALL = 0x1     - Очистить всю память

## Регистры
REG1-REG8    = Общего назначения (0x1-0x8)
SYS_REG1-4   = Системные регистры (0x9-0xC)

## Пример программы
111101110111  ; START DELAY DELAY
100100011111  ; PUTD R1 15
101000010101  ; MULT R1 5 → 75
000100010111  ; ADD R1 7 → 82 ('R')
100000010111  ; GET R1 → вывод 'R'
011101110000  ; STOP DELAY DELAY

## Графические системы

### ROS (Консольная оболочка)
- Текстовый интерфейс
- Файловый менеджер
- Текстовый редактор
- Калькулятор
- Системные настройки

### GROS (Графическая ОС)
- Оконный GUI в консоли
- Рабочий стол с иконками
- Перетаскивание окон
- Меню пуск
- Анимированные переходы
- Панель задач с часами

## Структура файлов
main.c      - Ядро VM, эмулятор процессора
ROS.c       - Консольная оболочка
GROS.c      - Графическая оконная система
*.rvm       - Бинарные файлы программ
system.cfg  - Конфигурация режима GUI

## Процесс загрузки
1. Инициализация памяти и регистров VM
2. Загрузка KERNEL.rvm по адресу 256
3. Выполнение BOOT.rvm с адреса 0
4. Выбор режима GUI (ROS/GROS)
5. Запуск пользовательского интерфейса

## Компиляция
gcc -o rvm main.c ROS.c GROS.c -luser32 -lgdi32

## Использование
Программы - текстовые файлы с 12-битными инструкциями, по одной на строку.
Размещайте .rvm файлы в папке rvm/ и загружайте через loadProgram().

## Производительность
- Эмулируемая скорость: ~100 КГц
- Скорость инструкций: ~1000/сек
- Графика: 60 FPS в режиме GROS

## Ключевые особенности
- Собственная 12-битная архитектура
- Полное управление памятью
- Две графические системы в консоли
- Загрузка внешних программ
- Отображение реального времени
- Система управления окнами

Это полноценная образовательная ОС, демонстрирующая принципы архитектуры компьютеров через программную эмуляцию.